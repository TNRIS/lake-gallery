"""
Django settings for lakegallery project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from lakegallery.secrets import secrets

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gmok4bz=i9&fjq-*z3a@b)6)cm2#pu7852&xii%mmgk@#381h%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'rest_framework',
    'rest_framework_gis',
    'api',
    'map',
    'leaflet',
    'djgeojson',
    'bootstrap4',
    'storages',
    'multiselectfield',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mobileesp.middleware.MobileDetectionMiddleware',
]

ROOT_URLCONF = 'lakegallery.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lakegallery.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': secrets.db_engine,
        'NAME': secrets.db_name,
        'USER': secrets.db_user,
        'PASSWORD': secrets.db_password,
        'HOST': secrets.db_host,
        'PORT': secrets.db_port,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# AWS Bucket Settings for Static & Media
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

# AWS_ACCESS_KEY_ID = secrets.aws_access_key_id
# AWS_SECRET_ACCESS_KEY = secrets.aws_secret_access_key
AWS_STORAGE_BUCKET_NAME = secrets.aws_storage_bucket_name
AWS_S3_REGION_NAME = secrets.aws_s3_region_name
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

MEDIAFILES_LOCATION = 'media'
DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'
MEDIA_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)

STATICFILES_LOCATION = 'static'

LAKE_GALLERY_MODE = os.environ.get('LAKE_GALLERY_MODE')
print('**** Project running in %s mode ****' % LAKE_GALLERY_MODE)
if LAKE_GALLERY_MODE == "PRODUCTION":
    # For PROD - References prod static files in AWS
    STATICFILES_STORAGE = 'custom_storages.StaticStorage'
    STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN,
                                     STATICFILES_LOCATION)
else:
    # For DEV - Local Development
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        # 'rest_framework.permissions.IsAdminUser',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (31.185216, -99.9),
    'DEFAULT_ZOOM': 6,
    'MIN_ZOOM': 2,
    'RESET_VIEW': False,
    'PLUGINS': {
        'UTFGRID': {
            'js': 'map/leaflet_utfgrid/L.UTFGrid-min.js',
            'auto-include': True
        },
        'SIDEBYSIDE': {
            'js': 'map/leaflet-side-by-side.js',
            'auto-include': True
        },
        'ESRI': {
            'js': 'map/esri/esri-leaflet.js',
            'auto-include': True
        }
    },
    'TILES': []
}
